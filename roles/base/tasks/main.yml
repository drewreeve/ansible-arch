---
- name: Install base packages
  pacman:
    name: "{{ packages.base }}"
    state: present

- name: Create pacman hook directory
  file:
    path: /etc/pacman.d/hooks
    state: directory

- name: Copy pacman cache cleanup hook
  copy:
    src: paccache.hook
    dest: /etc/pacman.d/hooks/paccache.hook

- name: Copy reflector.service
  copy:
    src: reflector.service
    dest: /etc/systemd/system/reflector.service

- name: Copy reflector.timer
  copy:
    src: reflector.timer
    dest: /etc/systemd/system/reflector.timer

- name: Enable reflector.timer
  systemd:
    name: reflector.timer
    enabled: yes

- name: Enable colour in pacman
  lineinfile:
    dest: /etc/pacman.conf
    regexp: '#Color'
    line: 'Color'

- name: Use multiple jobs to speed up compilation
  lineinfile:
    dest: /etc/makepkg.conf
    regexp: '^#MAKEFLAGS=\".+\"$'
    line: 'MAKEFLAGS="-j$(nproc)"'

- name: Install yay
  aur:
    name: yay
  become: yes
  become_user: "{{ user.name }}"

- name: Enable wheel group
  lineinfile:
    path: /etc/sudoers.d/01-enable-wheel
    line: '%wheel ALL=(ALL) ALL'
    create: yes
    validate: 'visudo -cf %s'


- name: Create new user
  user:
    name: "{{ user.name }}"
    groups: "{{ user.groups }}"
    shell: "{{ user.shell }}"
    password: "{{ user_password|password_hash('sha512') }}"
    update_password: on_create
    append: yes

# Workaround that allows us to later create systemd user services

- name: Get user id
  become: yes
  become_user: "{{ user.name }}"
  command: id -u
  register: user_uid

- set_fact:
    user_uid={{ user_uid.stdout }}

- name: Start user systemd instance
  systemd:
    name: "user@{{ user_uid }}"
    state: started
  notify: stop systemd per-user instance
